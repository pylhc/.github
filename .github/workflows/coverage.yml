# Caller Template --------------------------------------------------------------

# # Runs all tests and pushes coverage report to codeclimate
# name: Coverage

# on:  # Runs on all push events to master branch and any push related to a pull request
#   push:
#     branches:
#       - master
#   pull_request:  # so that codeclimate gets coverage and reports on the diff

# jobs:
#   coverage:
#       uses: pylhc/.github/.github/workflows/coverage.yml@master
#       with:
#         src-dir: omc3
#         pytest-options: -m "not cern_network"
#       secrets: inherit

# ------------------------------------------------------------------------------
name: Reusable Testing with Coverage 

on:
  workflow_call:
    inputs:
      src-dir:
        required: true 
        type: string
      pytest-options:
        required: false 
        type: string
      extra-dependencies:
        required: false 
        type: string
        default: test
      dependency-file:
        required: false 
        type: string
        default: setup.py
    secrets: 
        CC_TEST_REPORTER_ID:
            required: true

defaults:
  run:
    shell: bash

jobs:
  coverage:
    runs-on: ubuntu-latest
    env:
        python-version: 3.9

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python $python-version
        uses: actions/setup-python@v4
        with:
          python-version: $python-version
          cache: 'pip'
          cache-dependency-path: '**/${{ inputs.dependency-file }}'

      - name: Upgrade pip, setuptools and wheel
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install package
        run: python -m pip install '.[${{ inputs.extra-dependencies }}]'

      - name: Set up env for CodeClimate (push)
        run: |
          echo "GIT_BRANCH=${GITHUB_REF/refs\/heads\//}" >> $GITHUB_ENV
          echo "GIT_COMMIT_SHA=$GITHUB_SHA" >> $GITHUB_ENV
        if: github.event_name == 'push'

      - name: Set up env for CodeClimate (pull_request)
        env:
          PR_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
        run: |
          echo "GIT_BRANCH=$GITHUB_HEAD_REF" >> $GITHUB_ENV
          echo "GIT_COMMIT_SHA=$PR_HEAD_SHA" >> $GITHUB_ENV
        if: github.event_name == 'pull_request'

      - name: Prepare CodeClimate binary
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: |
          curl -LSs 'https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64' >./cc-test-reporter;
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build

      - name: Run all tests
        run: python -m pytest ${{ inputs.pytest-options }} --cov-report xml --cov=${{ inputs.src-dir }}

      - name: Push Coverage to CodeClimate
        if: ${{ success() }}  # only if tests were successful
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: ./cc-test-reporter after-build
