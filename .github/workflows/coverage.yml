# Caller Template --------------------------------------------------------------

# # Runs all tests and pushes coverage report to codeclimate
# name: Coverage

# on:  # Runs on all push events to master branch and any push related to a pull request
#   push:
#     branches:
#       - master
#   pull_request:  # so that codeclimate gets coverage and reports on the diff

# jobs:
#   coverage:
#       uses: pylhc/.github/.github/workflows/coverage.yml@master
#       with:
#         src-dir: omc3
#         pytest-options: -m "not cern_network"
#       secrets: inherit

# ------------------------------------------------------------------------------
name: Reusable Testing with Coverage

on:
  workflow_call:
    inputs:
      src-dir:
        required: true
        type: string
      pytest-options:
        required: false
        type: string
      extra-dependencies:
        required: false
        type: string
        default: test
      dependency-file:
        required: false
        type: string
        default: pyproject.toml

env:
  UV_COMPILE_BYTECODE: 1

defaults:
  run:
    shell: bash

jobs:
  coverage:
    runs-on: ubuntu-latest
    env:
        python-version: "3.13"

    steps:
      - uses: actions/checkout@v4

      - name: Install uv and Python
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ env.python-version }}
          enable-cache: true
          activate-environment: true
          cache-dependency-glob: '${{ inputs.dependency-file }}'

      # The uv pip should make & use an env from the Python install of the previous step
      - name: Install package
        run: uv pip install '.[${{ inputs.extra-dependencies }}]'

      - name: Run all tests
        run: python -m pytest ${{ inputs.pytest-options }} --cov-report xml --cov-report term-missing --cov=${{ inputs.src-dir }}

      - name: Show Coverage Report to PR
        uses: orgoro/coverage@v3.2
        if: ${{ success() }} && github.event_name == 'pull_request' # only if tests were successful, and a PR
        with:
          thresholdAll: 0.8  # we want at least 80% coverage for the package, fail if not
          coverageFile: coverage.xml  # default when using '--cov-report xml' option above
          token: ${{ secrets.GITHUB_TOKEN }}
